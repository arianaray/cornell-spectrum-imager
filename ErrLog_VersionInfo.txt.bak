(Fiji Is Just) ImageJ 2.14.0/1.54f; Java 1.8.0_322 [64-bit]; Windows 10 10.0; 280MB of 48784MB (<1%)
 
java.lang.ClassCastException: [B cannot be cast to [F
	at com.spectrumimager.CSI.CSI_Dynamic_FFT.multiplyImages(CSI_Dynamic_FFT.java:296)
	at com.spectrumimager.CSI.CSI_Dynamic_FFT.getProfilePlot(CSI_Dynamic_FFT.java:334)
	at com.spectrumimager.CSI.CSI_Dynamic_FFT.run(CSI_Dynamic_FFT.java:70)
	at ij.IJ.runUserPlugIn(IJ.java:244)
	at ij.IJ.runPlugIn(IJ.java:210)
	at ij.Executer.runCommand(Executer.java:152)
	at ij.Executer.run(Executer.java:70)
	at java.lang.Thread.run(Thread.java:750)


(Fiji Is Just) ImageJ 2.14.0/1.54f; Java 1.8.0_322 [64-bit]; Windows 10 10.0; 284MB of 48784MB (<1%)
 
java.lang.ClassCastException: [F cannot be cast to [B
	at com.spectrumimager.CSI.CSI_Dynamic_FFT.multiplyImages(CSI_Dynamic_FFT.java:299)
	at com.spectrumimager.CSI.CSI_Dynamic_FFT.getProfilePlot(CSI_Dynamic_FFT.java:336)
	at com.spectrumimager.CSI.CSI_Dynamic_FFT.run(CSI_Dynamic_FFT.java:72)
	at ij.IJ.runUserPlugIn(IJ.java:244)
	at ij.IJ.runPlugIn(IJ.java:210)
	at ij.Executer.runCommand(Executer.java:152)
	at ij.Executer.run(Executer.java:70)
	at java.lang.Thread.run(Thread.java:750)
	
	Fixed these issues
	
	Version 1.3 implements Hanning window.
	To do: make B/C and LUT choices sticky.
	To do: make the new window an FFT
	To do: get the FFT scale
	To do: make a button for filter on/off. 
	To do: make FFT of stack. (Make it tied to the slice you're on?)
	To do: check if any ROI will work. 
	--do I need to include "throwsIOException" to method?
	//
	To do: For 4D Analyzer, allow circular ROI to work
	To do: For 4D Analyzer, make B/C and LUT choices sticky. 
	To do: Cepstral transform option?

Note: ip.createProcessorâ€‹(int width, int height) 	
Returns a new, blank FloatProcessor with the specified width and height.
Use this to make a new processor in the code. 

Note: Check out ImageLib2 documentation. 

Version 0.1.3:
Performs FFT with calculating Hamming window

Version 0.1.4:
Performs FHT. To do: brightness/contrast listener and try transform1d in FHT with built-in filter. 
4D Analyzer: Keeps LUT in k image. Test in ImageJ1 

Exception in thread "Dynamic Profiler Plot" java.lang.ArrayIndexOutOfBoundsException: 0
	at ij.process.FloatProcessor.<init>(FloatProcessor.java:58)
	at com.spectrumimager.CSI.CSI_Dynamic_FFT.makeHammingWindow(CSI_Dynamic_FFT.java:247)
	at com.spectrumimager.CSI.CSI_Dynamic_FFT.getFFT(CSI_Dynamic_FFT.java:359)
	at com.spectrumimager.CSI.CSI_Dynamic_FFT.run(CSI_Dynamic_FFT.java:154)
	at java.lang.Thread.run(Thread.java:750)


Version 0.1.5:
To/do: Try to preserve complex frequency info in FFT. One idea is to edit plotImage directly in the FFT method, or alternately to calculate the FFT in the main run method. 
--need to fix array index out of bounds exception when no ROI selected. 
For 4D Analyzer: while mouse is moving, sum over every other point if box contains more than 100 pts?

FFT works. However, can't figure out this error message each time things are closed:
Exception in thread "AWT-EventQueue-0" java.lang.NullPointerException
	at com.spectrumimager.CSI.CSI_Dynamic_FFT.closePlotImage(CSI_Dynamic_FFT.java:203)
	at com.spectrumimager.CSI.CSI_Dynamic_FFT.imageClosed(CSI_Dynamic_FFT.java:171)
	at ij.ImagePlus$1.run(ImagePlus.java:3049)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:74)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:205)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
